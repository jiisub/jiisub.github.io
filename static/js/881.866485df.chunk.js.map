{"version":3,"file":"static/js/881.866485df.chunk.js","mappings":"2NAiIA,QAlHA,SAAcA,GAAyD,IAAvD,QAACC,EAAO,WAAEC,EAAU,kBAAEC,GAA8BH,EAClE,MAAOI,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IAAIC,OACxCC,EAAkBC,IAAuBH,EAAAA,EAAAA,WAAS,IAClDI,EAASC,IAAcL,EAAAA,EAAAA,UAAS,CACrC,CAACM,OAAS,2BAAQC,OAAQ,GAC1B,CAACD,OAAS,eAAMC,OAAQ,GACxB,CAACD,OAAS,eAAMC,OAAQ,GACxB,CAACD,OAAS,eAAMC,OAAQ,GACxB,CAACD,OAAS,eAAMC,OAAQ,GACxB,CAACD,OAAS,qBAAOC,OAAQ,GACzB,CAACD,OAAS,qBAAOC,OAAQ,GACzB,CAACD,OAAS,eAAMC,OAAQ,KAE1B,IAAKC,EAAaC,IAAkBT,EAAAA,EAAAA,YA4BpC,OAzBAU,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAQC,OAAkB,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaK,IAC7BL,aAAuBM,oBACrBV,EAAQO,GAAOJ,OAChBC,EAAYO,MAAMC,gBAAkB,qBACpCR,EAAYO,MAAME,MAAQ,UAE1BT,EAAYO,MAAMC,gBAAkB,QACpCR,EAAYO,MAAME,MAAQ,SAE5BR,OAAeS,GACjB,GACC,CAACV,KAGJE,EAAAA,EAAAA,YAAU,KACR,IAAe,IAAZf,EAAkB,CACnB,IAAIwB,EAAiBC,SAASC,cAAc,oBACzCF,aAA0BG,cAC3BH,EAAeJ,MAAMQ,QAAU,IAC/BJ,EAAeJ,MAAMS,OAAS,MAElC,IACC,CAAC7B,KAGF8B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOI,QAAQ,WAAUF,SAAC,8BAC1BF,EAAAA,EAAAA,KAAA,SAAOK,KAAK,OAAOjB,GAAG,WAAWkB,KAAK,WAAWC,YAAY,sGAE/DJ,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOI,QAAQ,OAAMF,SAAC,kBACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAACQ,IAAU,CACTC,WAAW,aACXC,qBAAmB,EACnBC,QAAS,IAAInC,KACboC,gBAAiB,2DACjBC,SAAUpC,EAAmBJ,EAAY,KACzCyC,SAAWC,IACTzC,EAAayC,GACbrC,GAAoB,EAAK,EAE3BuB,UAAU,oBAGZD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,UAC/BF,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACf,UAAU,gBAAgBgB,KAAMC,EAAAA,eAIvDf,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,kBACLF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SAErCvB,EAAQwC,KAAI,CAACC,EAAOC,KAEhBrB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBb,GAAE,GAAAkC,OAAKD,GAAKE,QAAUC,IACvD,IAAIC,EAAO,IAAI9C,GACf8C,EAAKJ,GAAGvC,OAAS2C,EAAKJ,GAAGvC,MACzBF,EAAW6C,GACXzC,EAAewC,EAAEE,cAAc,EAC/BxB,SAAUkB,EAAMvC,QAAVwC,WAMlBrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gBAAgBsB,QAASA,KACzC,MAAMI,EAAgBhC,SAASC,cAAc,aACvCgC,EAAYjC,SAASC,cAAc,mBACzC,GAAG+B,aAAyBE,kBAAoBD,aAAqBC,iBAAiB,CACpF,IAAIC,EAAyB,GAC7BnD,EAAQwC,KAAKC,IACRA,EAAMtC,OACPgD,EAAaC,KAAKX,EAAMvC,OAC1B,IAEFT,EAAkB,CAChB4D,SAAWL,EAAcP,MACzBL,KAAOa,EAAUR,MACjBzC,QAAUmD,IAEZ3D,GAAW,EACb,GACA+B,SAAC,kDAMf,C,8GCyTA,QAnQA,WACE,IAAK+B,EAAgB7D,IAAqBG,EAAAA,EAAAA,UAAwB,CAChEyD,SAAW,wCACXjB,KAAO,4BACPpC,QAAU,CAAC,+BAEb,MAAOuD,EAAYC,IAAiB5D,EAAAA,EAAAA,UAAS,CAAC,wCAAW,4BAAS,+BAC3D6D,IAAkB7D,EAAAA,EAAAA,UAAS,EAACyB,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACf,UAAU,cAAcgB,KAAMoB,EAAAA,OAAsBrC,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACf,UAAU,cAAcgB,KAAMC,EAAAA,QACvJ,IAAKhD,EAASC,IAAcI,EAAAA,EAAAA,WAAS,IAChC+D,EAAiBC,IAAsBhE,EAAAA,EAAAA,UAAwB,KAC/DiE,EAAaC,IAAkBlE,EAAAA,EAAAA,WAAS,GAC7C,MAAMmE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAIXC,EAAqBC,IACzBA,EAAU5B,KAAI,CAACC,EAAOC,EAAG2B,KACvB,OAAQ5B,GACN,IAAK,2BACH4B,EAAI3B,GAAK,cACT,MACF,IAAK,eACH2B,EAAI3B,GAAK,QACT,MACF,IAAK,eACH2B,EAAI3B,GAAK,QACT,MACF,IAAK,eACH2B,EAAI3B,GAAK,KACT,MACF,IAAK,eACH2B,EAAI3B,GAAK,cACT,MACF,IAAK,qBACH2B,EAAI3B,GAAK,SACT,MACF,IAAK,qBACH2B,EAAI3B,GAAK,SACT,MACF,IAAK,eACH2B,EAAI3B,GAAK,UAEb,GACA,EA+IJ,OA3IApC,EAAAA,EAAAA,YAAU,KACR,IAAIgE,EAAUC,aAAaD,QAAQ,aAC/BE,EAAmBxD,SAASC,cAAc,sBAC1CwD,EAAczD,SAASC,cAAc,iBACzC,GAAe,OAAZqD,EACEE,aAA4BtD,aAAeuD,aAAuBvD,cACnEsD,EAAiB7D,MAAM+D,WAAa,UACpCD,EAAY9D,MAAM+D,WAAa,eAGjC,GAAe,OAAZJ,EACEE,aAA4BtD,aAAeuD,aAAuBvD,cACnEsD,EAAiB7D,MAAM+D,WAAa,UACpCD,EAAY9D,MAAM+D,WAAa,SAC/Bd,EAAmB,SAEhB,CACFY,aAA4BtD,aAAeuD,aAAuBvD,cACnEsD,EAAiB7D,MAAM+D,WAAa,SACpCD,EAAY9D,MAAM+D,WAAa,WAEjC,IAAIC,EAA2BC,KAAKC,MAAMP,GAAW,IACjDQ,EAAyB,GAC7B,IAAI,IAAIpC,EAAI,EAAGA,EAAIiC,EAAUI,OAAQrC,IAAI,CACvC,IAAIsC,EAAuB,IAAIL,EAAUjC,IACzCoC,EAAQ1B,KAAK4B,EACf,CACApB,EAAmBkB,EACrB,CACF,GACA,CAACb,EAAUJ,KAGbvD,EAAAA,EAAAA,YAAU,KACR,GAAGf,EAAQ,CACT,IAAIwB,EAAiBC,SAASC,cAAc,oBACzCF,aAA0BG,cAC3BH,EAAeJ,MAAMS,OAAS,MAC9BL,EAAeJ,MAAMQ,QAAU,IAEnC,IACC,CAAC5B,KAGJe,EAAAA,EAAAA,YAAU,KAER,GAA2B,8BAAxBgD,EAAelB,MAAmD,IAA/BkB,EAAelB,KAAK2C,OAAa,CACrEzB,EAAelB,KAAO,4BACtB,IAAI6C,EAAoBjE,SAASC,cAAc,SAC5CgE,aAA6BC,eAC9BD,EAAkBE,aAAa,KAAM,GAEzC,KAAO,CACL,IAAIF,EAAoBjE,SAASC,cAAc,SAC5CgE,aAA6BC,eAC9BD,EAAkBE,aAAa,KAAM,gBAEzC,CAGA,GAAiC,8BAA9B7B,EAAetD,QAAQ,IAAoD,IAAlCsD,EAAetD,QAAQ+E,OAAa,CAC9EzB,EAAetD,QAAU,CAAC,6BAC1B,IAAIiF,EAAoBjE,SAASC,cAAc,SAC5CgE,aAA6BC,eAC9BD,EAAkBE,aAAa,KAAM,GAEzC,KAAO,CACL7B,EAAetD,QAA4C,IAAlCsD,EAAetD,QAAQ+E,OAC9CzB,EAAetD,QACf,CAAC,GAAD2C,OAAIW,EAAetD,QAAQ,GAAE,YAAA2C,OAAMW,EAAetD,QAAQ+E,OAAS,EAAC,WACtE,IAAIE,EAAoBjE,SAASC,cAAc,SAC5CgE,aAA6BC,eAChCD,EAAkBE,aAAa,KAAM,gBAEvC,CAGA,GAA+B,0CAA5B7B,EAAeD,UAA6D,IAAnCC,EAAeD,SAAS0B,OAAa,CAC/EzB,EAAeD,SAAW,wCAC1B,IAAI4B,EAAoBjE,SAASC,cAAc,SAC5CgE,aAA6BC,eAC9BD,EAAkBE,aAAa,KAAM,GAEzC,KAAO,CACL7B,EAAeD,SAAWC,EAAeD,SAAS0B,OAAS,EAAIzB,EAAeD,SAAS+B,MAAM,EAAG,GAAK,MAAQ9B,EAAeD,SAC5H,IAAI4B,EAAoBjE,SAASC,cAAc,SAC5CgE,aAA6BC,eAC9BD,EAAkBE,aAAa,KAAM,gBAEzC,CAEA3B,EAAc,CAACF,EAAeD,SAAUC,EAAelB,QAASkB,EAAetD,SAAS,GACvF,CAACsD,KAGJhD,EAAAA,EAAAA,YAAU,KAER,GAA+B,0CAA5BgD,EAAeD,UAA6D,IAAnCC,EAAeD,SAAS0B,OAEvC,8BAAxBzB,EAAelB,MAAmD,IAA/BkB,EAAelB,KAAK2C,OAEvB,8BAA9BzB,EAAetD,QAAQ,IAAoD,IAAlCsD,EAAetD,QAAQ+E,OA1L3E,SAAqCzB,EAA+Ba,EAAoBR,EACtFC,GAEA,MAAMX,EAAYK,EAAelB,KAAKiD,WAAW,IAAK,KACtD,IAAIC,EAA6B,GAC/B3B,EAAgBnB,KAAKC,IAChBA,EAAM,KAAOQ,GACdqC,EAAYlC,KAAKX,EACnB,IAGF,IAAI8C,EAAkC,GAClCT,EAAU,IAAIxB,EAAetD,SACjCmE,EAAOW,GACPA,EAAQtC,KAAKtC,IACX,IAAI,IAAIwC,EAAI,EAAGA,EAAI4C,EAAYP,OAAQrC,IACrC,GAAGiB,EAAgBjB,GAAG,GAAG8C,SAAStF,GAEhC,YADAqF,EAAiBnC,KAAKO,EAAgBjB,GAG1C,IAGF,IAAI+C,EAAkC,GACtCH,EAAY9C,KAAKC,IACQ,kBAAbA,EAAM,IACXA,EAAM,GAAGiD,cAAcF,SAASlC,EAAeD,SAASqC,gBACzDD,EAAiBrC,KAAKX,EAE1B,IAGFmB,EAAmB6B,EAEvB,CA0JUE,CAA4BrC,EAAgBa,EAAQR,EAAiBC,GA9Q/E,SAA0BN,EAA+BK,EACvDC,GAEE,MAAMX,EAAYK,EAAelB,KAAKiD,WAAW,IAAK,KACtD,IAAIC,EAA6B,GACjC3B,EAAgBnB,KAAKC,IAChBA,EAAM,KAAOQ,GACdqC,EAAYlC,KAAKX,EACnB,IAGF,IAAIgD,EAAkC,GACtCH,EAAY9C,KAAKC,IACQ,kBAAbA,EAAM,IACXA,EAAM,GAAGiD,cAAcF,SAASlC,EAAeD,SAASqC,gBACzDD,EAAiBrC,KAAKX,EAE1B,IAGFmB,EAAmB6B,EAEvB,CA2PUG,CAAiBtC,EAAgBK,EAAiBC,GAGd,8BAA9BN,EAAetD,QAAQ,IAAoD,IAAlCsD,EAAetD,QAAQ+E,OA3PhF,SAA6BzB,EAA+Ba,EAAoBR,EAC9EC,GAEE,IAAI2B,EAAkC,GAClCT,EAAU,IAAIxB,EAAetD,SACjCmE,EAAOW,GACPA,EAAQtC,KAAKtC,IACX,IAAI,IAAIwC,EAAI,EAAGA,EAAIiB,EAAgBoB,OAAQrC,IACzC,GAAGiB,EAAgBjB,GAAG,GAAG8C,SAAStF,GAEhC,YADAqF,EAAiBnC,KAAKO,EAAgBjB,GAG1C,IAGF,IAAI+C,EAAkC,GACtCF,EAAiB/C,KAAKC,IACG,kBAAbA,EAAM,IACXA,EAAM,GAAGiD,cAAcF,SAASlC,EAAeD,SAASqC,gBACzDD,EAAiBrC,KAAKX,EAE1B,IAGFmB,EAAmB6B,EAEvB,CAmOQI,CAAoBvC,EAAgBa,EAAQR,EAAiBC,GAzUrE,SAAwBN,EAA+BK,EACrDC,GAEA,IAAI6B,EAAkC,GACtC9B,EAAgBnB,KAAKC,IACI,kBAAbA,EAAM,IACXA,EAAM,GAAGiD,cAAcF,SAASlC,EAAeD,SAASqC,gBACzDD,EAAiBrC,KAAKX,EAE1B,IAEFmB,EAAmB6B,EAErB,CA+TQK,CAAexC,EAAgBK,EAAiBC,QAG7C,GAA4B,8BAAxBN,EAAelB,MAAmD,IAA/BkB,EAAelB,KAAK2C,OAE/B,8BAA9BzB,EAAetD,QAAQ,IAAoD,IAAlCsD,EAAetD,QAAQ+E,OAxOzE,SAAyBzB,EAA+Ba,EAAoBR,EAC1EC,GAEE,MAAMX,EAAYK,EAAelB,KAAKiD,WAAW,IAAK,KACtD,IAAIC,EAA6B,GACjC3B,EAAgBnB,KAAKC,IAChBA,EAAM,KAAOQ,GACdqC,EAAYlC,KAAKX,EACnB,IAGF,IAAI8C,EAAkC,GAClCT,EAAU,IAAIxB,EAAetD,SACjCmE,EAAOW,GACPA,EAAQtC,KAAKtC,IACX,IAAI,IAAIwC,EAAI,EAAGA,EAAI4C,EAAYP,OAAQrC,IACrC,GAAGiB,EAAgBjB,GAAG,GAAG8C,SAAStF,GAEhC,YADAqF,EAAiBnC,KAAKO,EAAgBjB,GAG1C,IAGFkB,EAAmB2B,EAEvB,CAiNQQ,CAAgBzC,EAAgBa,EAAQR,EAAiBC,GAnUjEoC,eAA0B1C,EAA+BK,EACvDC,GAEE,MAAMX,EAAYK,EAAelB,KAAKiD,WAAW,IAAK,KACtD,IAAIC,EAA6B,GACjC3B,EAAgBnB,KAAKC,IAChBA,EAAM,KAAOQ,GACdqC,EAAYlC,KAAKX,EACnB,IAGFmB,EAAmB0B,EAEvB,CAyTQW,CAAW3C,EAAgBK,EAAiBC,QAGzC,GAAiC,8BAA9BN,EAAetD,QAAQ,IAAoD,IAAlCsD,EAAetD,QAAQ+E,QAzT9E,SAAuBzB,EAA+Ba,EAAoBR,EACxEC,GACA,IAAI2B,EAAkC,GAClCT,EAAU,IAAIxB,EAAetD,SACjCmE,EAAOW,GACPA,EAAQtC,KAAKtC,IACX,IAAI,IAAIwC,EAAI,EAAGA,EAAIiB,EAAgBoB,OAAQrC,IACzC,GAAGiB,EAAgBjB,GAAG,GAAG8C,SAAStF,GAEhC,YADAqF,EAAiBnC,KAAKO,EAAgBjB,GAG1C,IAGFkB,EAAmB2B,EAErB,CA2SMW,CAAc5C,EAAgBa,EAAQR,EAAiBC,OAClD,CACL,IAAIU,EAAUC,aAAaD,QAAQ,aAEnC,IAAIQ,EAAU,IADIF,KAAKC,MAAMP,GAAW,KAExCV,EAAmBkB,EACrB,IAEC,CAACxB,KAGF9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACC,KAAM6D,EAAAA,IAAa7E,UAAU,kBAC9CD,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2EACHF,EAAAA,EAAAA,KAAA,UAAQuB,QAASA,KACfmB,EAAS,IAAI,EACbxC,SAAC,qDAGLF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcC,UAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAE5BgC,EAAWf,KAAI,CAACC,EAAOC,KAEnBlB,EAAAA,EAAAA,MAAA,MAAIF,UAAS,gBAAAqB,OAAkBD,GAAaE,QAASA,KACnDpD,GAAW,EAAK,EAChB+B,SAAA,CAAEkC,EAAef,GAAID,IAFkBC,UASnDrB,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAE3BoC,EAAgBnB,KAAI,CAACC,EAAOC,KAExBrB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAqB8E,KAAI,GAAAzD,OAAKF,EAAM,IAAKlB,UACpDC,EAAAA,EAAAA,MAAA,WAASF,UAAU,gBAAeC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKkB,EAAM,MACXpB,EAAAA,EAAAA,KAAA,UAAQZ,GAAwB,kBAAbgC,EAAM,GAAkBA,EAAM,GAAK,GAAI,aAAW,cAAcnB,UAAU,eAAesB,QAAUC,IACpH,IAAIyB,EAAUC,aAAaD,QAAQ,aAC/BK,EAAyBC,KAAKC,MAAMP,GAAW,IAC/C+B,EAAM1B,EAAU2B,WAAUC,GAAKA,EAAE,KAAO9D,EAAM,KAClDkC,EAAU6B,OAAOH,EAAK,GAEtBI,OAAOC,MAAM,mEACbnC,aAAaoC,QAAQ,YAAa/B,KAAKgC,UAAUjC,IACjDb,GAAgBD,GAChBhB,EAAEgE,gBAAgB,EAClBtF,UAACF,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACC,KAAMwE,EAAAA,YAE5BtF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAAE,SACsB,kBAAbkB,EAAM,IAAmBA,EAAM,GAAGsC,OAAS,GAChDtC,EAAM,GAAG2C,MAAM,EAAG,IAAM,MACxB3C,EAAM,MAEVpB,EAAAA,EAAAA,KAAA,OAAAE,SACsB,kBAAbkB,EAAM,IAAmBA,EAAM,GAAGsC,OAAS,GAChDtC,EAAM,GAAG2C,MAAM,EAAG,IAAM,MACxB3C,EAAM,SAGZpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAEkB,EAAM,YA7BWC,UAsCtErB,EAAAA,EAAAA,KAAC0F,EAAAA,QAAK,CAACtH,kBAAmBA,EAAmBF,QAASA,EAASC,WAAYA,MAGjF,C","sources":["Component/Modal.tsx","Component/Scrap.tsx"],"sourcesContent":["import { useEffect, useState, Dispatch, SetStateAction } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.module.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FilteringType } from '../App';\r\n\r\n\r\n// Filtering Modal\r\ntype ModalType = {\r\n  modalOn : boolean,\r\n  setModalOn : Dispatch<SetStateAction<boolean>>,\r\n  setFilteringValue : Dispatch<SetStateAction<FilteringType>>\r\n}\r\n\r\nfunction Modal ({modalOn, setModalOn, setFilteringValue} : ModalType) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [placeholderValue, setPlaceholderValue] = useState(false);\r\n  const [country, setCountry] = useState([\r\n    {nation : '대한민국', click : false},\r\n    {nation : '중국', click : false},\r\n    {nation : '일본', click : false},\r\n    {nation : '미국', click : false},\r\n    {nation : '북한', click : false},\r\n    {nation : '러시아', click : false},\r\n    {nation : '프랑스', click : false},\r\n    {nation : '영국', click : false}\r\n  ]);\r\n  let [buttonClick, setButtonClick] = useState<HTMLButtonElement>();\r\n\r\n  // Country Button UI\r\n  useEffect(() => {\r\n    let index = Number(buttonClick?.id);\r\n    if(buttonClick instanceof HTMLButtonElement){\r\n      if(country[index].click){\r\n        buttonClick.style.backgroundColor = 'rgb(107, 157, 237)';\r\n        buttonClick.style.color = 'white';\r\n      } else {\r\n        buttonClick.style.backgroundColor = 'white';\r\n        buttonClick.style.color = 'black';\r\n      }\r\n      setButtonClick(undefined);\r\n    }\r\n  }, [buttonClick]);\r\n\r\n  // Modal OFF\r\n  useEffect(() => {\r\n    if(modalOn === false){\r\n      let modalContainer = document.querySelector('.modal-container');\r\n      if(modalContainer instanceof HTMLElement){\r\n        modalContainer.style.opacity = '0';\r\n        modalContainer.style.zIndex = '-10';\r\n      }\r\n    }\r\n  }, [modalOn])\r\n\r\n  return(\r\n    <div className=\"modal-container\">\r\n      <div className=\"filter-container\">\r\n        <ul>\r\n          <li>\r\n            <label htmlFor=\"headline\">헤드라인</label>\r\n            <input type=\"text\" id=\"headline\" name=\"headline\" placeholder=\"검색하실 헤드라인을 입력해주세요.\" />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"date\">날짜</label>\r\n            <div className='datepicker-container'>  \r\n              <DatePicker\r\n                dateFormat='yyyy.MM.dd'\r\n                shouldCloseOnSelect\r\n                maxDate={new Date()}\r\n                placeholderText={\"날짜를 선택해주세요.\"}\r\n                selected={placeholderValue ? startDate : null}\r\n                onChange={(date :Date) => {\r\n                  setStartDate(date)\r\n                  setPlaceholderValue(true);\r\n                }}\r\n                className='calendar-input'\r\n              >\r\n              </DatePicker>\r\n              <span className=\"datepicker-icon\">\r\n                <FontAwesomeIcon className='calendar-icon' icon={faCalendarCheck}/>\r\n              </span>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div>국가</div>\r\n            <div className=\"country-button-container\">\r\n              {\r\n                country.map((value, i) => {\r\n                  return(\r\n                    <button className='country-button' id={`${i}`} onClick={(e) => {\r\n                      let copy = [...country];\r\n                      copy[i].click = !copy[i].click;\r\n                      setCountry(copy);\r\n                      setButtonClick(e.currentTarget);\r\n                    }} key={i}>{value.nation}</button>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <button className=\"filter-button\" onClick={() => {\r\n              const headlineValue = document.querySelector('#headline');\r\n              const dateValue = document.querySelector('.calendar-input');\r\n              if(headlineValue instanceof HTMLInputElement && dateValue instanceof HTMLInputElement){\r\n                let countryValue :string[] = [];\r\n                country.map((value) => {\r\n                  if(value.click){\r\n                    countryValue.push(value.nation);\r\n                  }\r\n                });\r\n                setFilteringValue({\r\n                  headline : headlineValue.value,\r\n                  date : dateValue.value,\r\n                  country : countryValue\r\n                });\r\n                setModalOn(false);\r\n              }\r\n            }}>필터 적용하기</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Modal\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileLines, faCalendarCheck, faMagnifyingGlass, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState, Dispatch, SetStateAction } from \"react\";\r\nimport { ArticleType } from \"../store\";\r\nimport Modal from \"./Modal\";\r\nimport { FilteringType, KrToEnType } from \"../App\";\r\n\r\n/* Filtering Function List */\r\n/** 1. Headline Filtering */\r\nfunction headlineFilter(filteringValue :FilteringType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>) {\r\n\r\n  let copyArticleArray :ArticleType[] = [];\r\n  scrappedArticle.map((value) => {\r\n    if(typeof value[1] === 'string'){\r\n      if(value[1].toLowerCase().includes(filteringValue.headline.toLowerCase())){\r\n        copyArticleArray.push(value);\r\n      }\r\n    }\r\n  });\r\n  setScrappedArticle(copyArticleArray);\r\n\r\n}\r\n\r\n/** 2. Date Filtering */\r\nasync function dateFilter(filteringValue :FilteringType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>) {\r\n  \r\n    const dateValue = filteringValue.date.replaceAll('.', '-');\r\n    let copyDateArr :ArticleType[] = []; \r\n    scrappedArticle.map((value) => {\r\n      if(value[3] === dateValue){\r\n        copyDateArr.push(value);\r\n      }\r\n    });\r\n\r\n    setScrappedArticle(copyDateArr);\r\n\r\n}\r\n\r\n/** 3. Country Filtering */\r\nfunction countryFilter(filteringValue :FilteringType, krToEn :KrToEnType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>) {\r\n  let countryFilterArr :ArticleType[] = [];\r\n  let copyArr = [...filteringValue.country];\r\n  krToEn(copyArr);\r\n  copyArr.map((nation) => {\r\n    for(let i = 0; i < scrappedArticle.length; i++){\r\n      if(scrappedArticle[i][5].includes(nation)){\r\n        countryFilterArr.push(scrappedArticle[i]);\r\n        return\r\n      }\r\n    }\r\n  });\r\n\r\n  setScrappedArticle(countryFilterArr);\r\n\r\n}\r\n\r\n/** 4. Headline + Date */\r\nfunction headlinePlusDate(filteringValue :FilteringType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>){\r\n  \r\n    const dateValue = filteringValue.date.replaceAll('.', '-');\r\n    let copyDateArr :ArticleType[] = []; \r\n    scrappedArticle.map((value) => {\r\n      if(value[3] === dateValue){\r\n        copyDateArr.push(value);\r\n      }\r\n    });\r\n\r\n    let copyArticleArray :ArticleType[] = [];\r\n    copyDateArr.map((value) => {\r\n      if(typeof value[1] === 'string'){\r\n        if(value[1].toLowerCase().includes(filteringValue.headline.toLowerCase())){\r\n          copyArticleArray.push(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    setScrappedArticle(copyArticleArray);\r\n  \r\n}\r\n\r\n/** 5. Headline + Country */\r\nfunction headlinePlusCountry(filteringValue :FilteringType, krToEn :KrToEnType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>){\r\n\r\n    let countryFilterArr :ArticleType[] = [];\r\n    let copyArr = [...filteringValue.country];\r\n    krToEn(copyArr);\r\n    copyArr.map((nation) => {\r\n      for(let i = 0; i < scrappedArticle.length; i++){\r\n        if(scrappedArticle[i][5].includes(nation)){\r\n          countryFilterArr.push(scrappedArticle[i]);\r\n          return\r\n        }\r\n      }\r\n    });\r\n\r\n    let copyArticleArray :ArticleType[] = [];\r\n    countryFilterArr.map((value) => {\r\n      if(typeof value[1] === 'string'){\r\n        if(value[1].toLowerCase().includes(filteringValue.headline.toLowerCase())){\r\n          copyArticleArray.push(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    setScrappedArticle(copyArticleArray);\r\n\r\n} \r\n\r\n/** 6. Date + Country */\r\nfunction datePlusCountry(filteringValue :FilteringType, krToEn :KrToEnType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>) {\r\n\r\n    const dateValue = filteringValue.date.replaceAll('.', '-');\r\n    let copyDateArr :ArticleType[] = []; \r\n    scrappedArticle.map((value) => {\r\n      if(value[3] === dateValue){\r\n        copyDateArr.push(value);\r\n      }\r\n    });\r\n\r\n    let countryFilterArr :ArticleType[] = [];\r\n    let copyArr = [...filteringValue.country];\r\n    krToEn(copyArr);\r\n    copyArr.map((nation) => {\r\n      for(let i = 0; i < copyDateArr.length; i++){\r\n        if(scrappedArticle[i][5].includes(nation)){\r\n          countryFilterArr.push(scrappedArticle[i]);\r\n          return\r\n        }\r\n      }\r\n    });\r\n\r\n    setScrappedArticle(countryFilterArr);\r\n\r\n}\r\n\r\n/** 7. Headline + Date + Country */\r\nfunction headlinePlusDatePlusCountry(filteringValue :FilteringType, krToEn :KrToEnType, scrappedArticle :ArticleType[],\r\n  setScrappedArticle :Dispatch<SetStateAction<ArticleType[]>>) {\r\n  \r\n  const dateValue = filteringValue.date.replaceAll('.', '-');\r\n  let copyDateArr :ArticleType[] = []; \r\n    scrappedArticle.map((value) => {\r\n      if(value[3] === dateValue){\r\n        copyDateArr.push(value);\r\n      }\r\n    });\r\n\r\n    let countryFilterArr :ArticleType[] = [];\r\n    let copyArr = [...filteringValue.country];\r\n    krToEn(copyArr);\r\n    copyArr.map((nation) => {\r\n      for(let i = 0; i < copyDateArr.length; i++){\r\n        if(scrappedArticle[i][5].includes(nation)){\r\n          countryFilterArr.push(scrappedArticle[i]);\r\n          return\r\n        }\r\n      }\r\n    });\r\n\r\n    let copyArticleArray :ArticleType[] = [];\r\n    copyDateArr.map((value) => {\r\n      if(typeof value[1] === 'string'){\r\n        if(value[1].toLowerCase().includes(filteringValue.headline.toLowerCase())){\r\n          copyArticleArray.push(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    setScrappedArticle(copyArticleArray);\r\n\r\n}\r\n\r\n\r\nfunction Scrap(){\r\n  let [filteringValue, setFilteringValue] = useState<FilteringType>({\r\n    headline : '전체 헤드라인',\r\n    date : '전체 날짜',\r\n    country : ['전체 국가']\r\n  });\r\n  const [headerList, setHeaderList] = useState(['전체 헤드라인', '전체 날짜', '전체 국가']);\r\n  const [headerListIcon] = useState([<FontAwesomeIcon className=\"header-icon\" icon={faMagnifyingGlass}/>, <FontAwesomeIcon className=\"header-icon\" icon={faCalendarCheck}/>])\r\n  let [modalOn, setModalOn] = useState(false);\r\n  let [scrappedArticle, setScrappedArticle] = useState<ArticleType[]>([]);\r\n  let [reRendering, setReRendering] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  /** Korean to English Funtion */\r\n  // type KrToEnType = (parameter :string[]) => void\r\n  const krToEn :KrToEnType= (parameter :string[]) => {\r\n    parameter.map((value, i, arr) => {\r\n      switch (value) {\r\n        case '대한민국': \r\n          arr[i] = 'South Korea'; \r\n          break;\r\n        case '중국': \r\n          arr[i] = 'China'; \r\n          break;\r\n        case '일본': \r\n          arr[i] = 'Japan'; \r\n          break;\r\n        case '미국': \r\n          arr[i] = 'US'; \r\n          break;\r\n        case '북한': \r\n          arr[i] = 'North Korea'; \r\n          break;\r\n        case '러시아': \r\n          arr[i] = 'Russia'; \r\n          break;\r\n        case '프랑스': \r\n          arr[i] = 'France'; \r\n          break;\r\n        case '영국': \r\n          arr[i] = 'England'; \r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Initial Screen\r\n  useEffect(() => {\r\n    let getItem = localStorage.getItem('scrapList');\r\n    let InitialContainer = document.querySelector('.initial-container');\r\n    let scrapHeader = document.querySelector('.scrap-header');\r\n    if(getItem === null){\r\n      if(InitialContainer instanceof HTMLElement && scrapHeader instanceof HTMLElement){\r\n        InitialContainer.style.visibility = 'visible';\r\n        scrapHeader.style.visibility = 'hidden';\r\n      }\r\n    } else {\r\n      if(getItem === '[]'){\r\n        if(InitialContainer instanceof HTMLElement && scrapHeader instanceof HTMLElement){\r\n          InitialContainer.style.visibility = 'visible';\r\n          scrapHeader.style.visibility = 'hidden';\r\n          setScrappedArticle([]);\r\n        }\r\n      } else {\r\n        if(InitialContainer instanceof HTMLElement && scrapHeader instanceof HTMLElement){\r\n          InitialContainer.style.visibility = 'hidden';\r\n          scrapHeader.style.visibility = 'visible';\r\n        }\r\n        let scrapList :ArticleType[] = JSON.parse(getItem || \"\");\r\n        let copyArr :ArticleType[] = [];\r\n        for(let i = 0; i < scrapList.length; i++){\r\n          let copyObj :ArticleType = [...scrapList[i]];\r\n          copyArr.push(copyObj);\r\n        }\r\n        setScrappedArticle(copyArr);\r\n      }\r\n    }\r\n  },[location, reRendering]);\r\n\r\n  // Modal ON OFF\r\n  useEffect(() => {\r\n    if(modalOn){\r\n      let modalContainer = document.querySelector('.modal-container');\r\n      if(modalContainer instanceof HTMLElement){\r\n        modalContainer.style.zIndex = '100';\r\n        modalContainer.style.opacity = '1';\r\n      }\r\n    }\r\n  }, [modalOn]);\r\n\r\n  // Header UI\r\n  useEffect(() => {\r\n    // Date UI\r\n    if(filteringValue.date === '전체 날짜' || filteringValue.date.length === 0){\r\n      filteringValue.date = '전체 날짜';\r\n      let headerContainerLi = document.querySelector('.li-1');\r\n      if(headerContainerLi instanceof HTMLLIElement){\r\n        headerContainerLi.setAttribute('id', '');\r\n      }\r\n    } else {\r\n      let headerContainerLi = document.querySelector('.li-1');\r\n      if(headerContainerLi instanceof HTMLLIElement){\r\n        headerContainerLi.setAttribute('id', 'filtering-css');\r\n      }\r\n    }\r\n\r\n    // Country UI\r\n    if(filteringValue.country[0] === '전체 국가' || filteringValue.country.length === 0){ \r\n      filteringValue.country = ['전체 국가'];\r\n      let headerContainerLi = document.querySelector('.li-2');\r\n      if(headerContainerLi instanceof HTMLLIElement){\r\n        headerContainerLi.setAttribute('id', '');\r\n      }\r\n    } else {\r\n      filteringValue.country = filteringValue.country.length === 1\r\n      ? filteringValue.country\r\n      : [`${filteringValue.country[0]} 외 ${filteringValue.country.length - 1}개`];\r\n      let headerContainerLi = document.querySelector('.li-2');\r\n      if(headerContainerLi instanceof HTMLLIElement){\r\n      headerContainerLi.setAttribute('id', 'filtering-css');\r\n      }\r\n    }\r\n\r\n    // Headline UI\r\n    if(filteringValue.headline === '전체 헤드라인' || filteringValue.headline.length === 0){\r\n      filteringValue.headline = '전체 헤드라인';\r\n      let headerContainerLi = document.querySelector('.li-0');\r\n      if(headerContainerLi instanceof HTMLLIElement){\r\n        headerContainerLi.setAttribute('id', '');\r\n      }\r\n    } else {\r\n      filteringValue.headline = filteringValue.headline.length > 6 ? filteringValue.headline.slice(0, 6) + '...' : filteringValue.headline;\r\n      let headerContainerLi = document.querySelector('.li-0');\r\n      if(headerContainerLi instanceof HTMLLIElement){\r\n        headerContainerLi.setAttribute('id', 'filtering-css');\r\n      }\r\n    }\r\n    \r\n    setHeaderList([filteringValue.headline, filteringValue.date, ...filteringValue.country])\r\n  }, [filteringValue]);\r\n\r\n  // Filtering Function\r\n  useEffect(() => {\r\n    // Headline\r\n    if(filteringValue.headline !== '전체 헤드라인' && filteringValue.headline.length !== 0){\r\n\r\n      if(filteringValue.date !== '전체 날짜' && filteringValue.date.length !== 0){\r\n\r\n        if(filteringValue.country[0] !== '전체 국가' && filteringValue.country.length !== 0){\r\n          // Headline + Date + Country\r\n          headlinePlusDatePlusCountry(filteringValue, krToEn, scrappedArticle, setScrappedArticle);\r\n        } else {\r\n          // Headline + Date\r\n          headlinePlusDate(filteringValue, scrappedArticle, setScrappedArticle);\r\n        }\r\n\r\n      } else if(filteringValue.country[0] !== '전체 국가' && filteringValue.country.length !== 0){\r\n        // Headline + Country\r\n        headlinePlusCountry(filteringValue, krToEn, scrappedArticle, setScrappedArticle);\r\n      } else {\r\n        // Headline\r\n        headlineFilter(filteringValue, scrappedArticle, setScrappedArticle);\r\n      }\r\n\r\n    } else if (filteringValue.date !== '전체 날짜' && filteringValue.date.length !== 0){\r\n\r\n      if(filteringValue.country[0] !== '전체 국가' && filteringValue.country.length !== 0){\r\n        // Date + Country\r\n        datePlusCountry(filteringValue, krToEn, scrappedArticle, setScrappedArticle);\r\n      } else {\r\n        // Date\r\n        dateFilter(filteringValue, scrappedArticle, setScrappedArticle);\r\n      }\r\n\r\n    } else if(filteringValue.country[0] !== '전체 국가' && filteringValue.country.length !== 0){\r\n      // Country\r\n      countryFilter(filteringValue, krToEn, scrappedArticle, setScrappedArticle);\r\n    } else {\r\n      let getItem = localStorage.getItem('scrapList');\r\n      const scrapList = JSON.parse(getItem || \"\");\r\n      let copyArr = [...scrapList];\r\n      setScrappedArticle(copyArr);\r\n    }\r\n\r\n  }, [filteringValue]);\r\n\r\n  return(\r\n    <div className=\"scrap-container\">\r\n      <div className=\"initial-container\">\r\n        <FontAwesomeIcon icon={faFileLines} className=\"initial-icon\" />\r\n        <p>저장된 스크랩이 없습니다.</p>\r\n        <button onClick={() => {\r\n          navigate('/');\r\n        }}>스크랩 하러 가기</button>\r\n      </div>\r\n\r\n      <header className=\"scrap-header\">\r\n        <ul className='header-container'>\r\n          {\r\n            headerList.map((value, i) => {\r\n              return(\r\n                <li className={`header-li li-${i}`} key={i} onClick={() => {\r\n                  setModalOn(true);\r\n                }}>{headerListIcon[i]}{value}</li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"main-container\">\r\n          {\r\n            scrappedArticle.map((value, i) => {\r\n              return(\r\n                <a className=\"scrap-link-article\" href={`${value[6]}`} key={i}>\r\n                  <article className=\"scrap-article\">\r\n                    <div className=\"scrap-article-top\">\r\n                      <h1>{value[1]}</h1>\r\n                      <button id={typeof value[0] === 'string' ? value[0] : ''} aria-label=\"scrapButton\" className=\"scrap-button\" onClick={(e) => {\r\n                        let getItem = localStorage.getItem('scrapList');\r\n                        let scrapList :ArticleType = JSON.parse(getItem || \"\");\r\n                        let idx = scrapList.findIndex(v => v[0] === value[0]);\r\n                        scrapList.splice(idx, 1);\r\n\r\n                        window.alert('스크랩 해제 되었습니다.');\r\n                        localStorage.setItem('scrapList', JSON.stringify(scrapList));\r\n                        setReRendering(!reRendering);\r\n                        e.preventDefault();\r\n                      }}><FontAwesomeIcon icon={faStar} /></button>\r\n                    </div>\r\n                    <div className=\"scrap-article-bottom\">\r\n                      <div className=\"scrap-article-origin\">\r\n                        <div>{\r\n                          typeof value[4] === 'string' && value[4].length > 15\r\n                          ? value[4].slice(0, 15) + '...'\r\n                          : value[4]  \r\n                        }</div>\r\n                        <div>{\r\n                          typeof value[2] === 'string' && value[2].length > 15\r\n                          ? value[2].slice(0, 15) + '...'\r\n                          : value[2]\r\n                        }</div>\r\n                      </div>\r\n                      <div className=\"scrap-article-date\">{value[3]}</div>\r\n                    </div>\r\n                  </article>\r\n                </a>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </main>\r\n      <Modal setFilteringValue={setFilteringValue} modalOn={modalOn} setModalOn={setModalOn}></Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scrap\r\n"],"names":["_ref","modalOn","setModalOn","setFilteringValue","startDate","setStartDate","useState","Date","placeholderValue","setPlaceholderValue","country","setCountry","nation","click","buttonClick","setButtonClick","useEffect","index","Number","id","HTMLButtonElement","style","backgroundColor","color","undefined","modalContainer","document","querySelector","HTMLElement","opacity","zIndex","_jsx","className","children","_jsxs","htmlFor","type","name","placeholder","DatePicker","dateFormat","shouldCloseOnSelect","maxDate","placeholderText","selected","onChange","date","FontAwesomeIcon","icon","faCalendarCheck","map","value","i","concat","onClick","e","copy","currentTarget","headlineValue","dateValue","HTMLInputElement","countryValue","push","headline","filteringValue","headerList","setHeaderList","headerListIcon","faMagnifyingGlass","scrappedArticle","setScrappedArticle","reRendering","setReRendering","navigate","useNavigate","location","useLocation","krToEn","parameter","arr","getItem","localStorage","InitialContainer","scrapHeader","visibility","scrapList","JSON","parse","copyArr","length","copyObj","headerContainerLi","HTMLLIElement","setAttribute","slice","replaceAll","copyDateArr","countryFilterArr","includes","copyArticleArray","toLowerCase","headlinePlusDatePlusCountry","headlinePlusDate","headlinePlusCountry","headlineFilter","datePlusCountry","async","dateFilter","countryFilter","faFileLines","href","idx","findIndex","v","splice","window","alert","setItem","stringify","preventDefault","faStar","Modal"],"sourceRoot":""}